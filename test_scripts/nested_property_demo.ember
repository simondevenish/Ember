// EmberScript Nested Property Demo
// This script demonstrates two approaches to nested property assignment

// Create a nested object
var user = {
    name: "Alice",
    profile: {
        age: 28,
        location: {
            city: "Portland",
            state: "Oregon"
        }
    }
};

// Print initial values
print("Initial city: " + user.profile.location.city);
print("Initial state: " + user.profile.location.state);

// -------------------------------------------------------------------------
// Approach 1: Direct nested property assignment (works in AST interpreter)
// -------------------------------------------------------------------------
// When running with: ./test_runner test_scripts/nested_property_demo.ember

// This will work in AST interpreter mode but may fail in VM mode
user.profile.location.city = "Seattle";

// -------------------------------------------------------------------------
// Approach 2: Workaround using temporary variables (works in both modes)
// -------------------------------------------------------------------------
// When running with: ./build/emberc run nested_property_demo.embc

// Get the nested object
var location = user.profile.location;

// Update the property
location.state = "Washington";

// Set it back to the parent object
user.profile.location = location;

// Print the updated values
print("Updated city: " + user.profile.location.city);
print("Updated state: " + user.profile.location.state);

// -------------------------------------------------------------------------
// For deeply nested properties (3+ levels), you need to work level by level
// -------------------------------------------------------------------------

// Example for updating user.profile.location.state to "California"
var profile = user.profile;
var location = profile.location;
location.state = "California";
profile.location = location;
user.profile = profile;

print("Final state: " + user.profile.location.state); 